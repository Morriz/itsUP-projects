services:
  indie-comics-app:
    depends_on:
      - indie-comics-db
    environment:
      - API_KEY=${API_KEY}
      - AUTH_TRUST_HOST=${AUTH_TRUST_HOST}
      - DATABASE_URL=${DATABASE_URL}
      - EMAIL_FROM=${EMAIL_FROM}
      - EMAIL_REPLYTO=${EMAIL_REPLYTO}
      # - LOG_LEVEL=debug
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - SENTRY_AUTH_TOKEN=${SENTRY_AUTH_TOKEN}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_KEY=${SMTP_KEY}
    expose:
      - 3000/tcp
    image: morriz/indie-comics:main
    networks:
      - default
    restart: unless-stopped
    volumes:
      - ./data:/var/lib/postgresql/data
    healthcheck:
      interval: 30s
      retries: 3
      start_period: 40s
      test:
        - CMD
        - sh
        - -c
        - 'node -e "require(''http'').get(''http://localhost:3000'', (r) => process.exit(r.statusCode
          === 200 ? 0 : 1)).on(''error'', () => process.exit(1))"'
      timeout: 15s
  indie-comics-db:
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
    expose:
      - 5432/tcp
    image: postgres:16-alpine
    networks:
      - default
    restart: unless-stopped
    volumes:
      - ./data:/var/lib/postgresql/data
    healthcheck:
      interval: 10s
      retries: 5
      test:
        - CMD-SHELL
        - pg_isready -U postgres
      timeout: 5s
